<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:s="library://ns.adobe.com/flex/spark"
	layout="absolute" width="350" height="442" 
	verticalScrollPolicy="off" horizontalScrollPolicy="off" 
	xmlns:desktop="flash.desktop.*" initialize="init()">
	
<mx:Script>
<![CDATA[
	import flash.display.*;
	import flash.events.*;
	import flash.events.KeyboardEvent;
	import flash.system.fscommand;
	import flash.utils.getTimer;
	import flash.utils.setTimeout;
	
	import flashx.textLayout.formats.Direction;
	
	import mx.accessibility.ButtonAccImpl;
	import mx.controls.ProgressBarMode;
	import mx.core.FlexBitmap;
	import mx.core.UIComponent;
	import mx.core.Window;
	import mx.events.AIREvent;
	import mx.events.BrowserChangeEvent;
	import mx.events.FileEvent;
	import mx.events.FlexEvent;
	import mx.formatters.NumberFormatter;
	import mx.managers.BrowserManager;
	import mx.managers.FocusManager;
	import mx.managers.SystemManager;
	import mx.managers.WindowedSystemManager;
	import mx.messaging.AbstractConsumer;
	import mx.rpc.events.AbstractEvent;
	import mx.utils.object_proxy;
	
	import org.osmf.events.TimeEvent;
	import org.osmf.image.ImageLoader;

	private const SOUND_FILES:String = "C:\\";
	private const IMAGE_DELAY:uint = 2000;
	
	private var imageFilter:FileFilter = new FileFilter("Images","*.jpg; *.jpeg");
	private var imageArray:Array = null;
	private var imageTimer:Timer = new Timer(IMAGE_DELAY,0);
	private var imageCounter:uint = 0;
	private var songFilter:FileFilter = new FileFilter("mp3","*.mp3");
	private var snd:Sound = null;
	private var songUrl:URLRequest;
	public var channel:SoundChannel;		
	private var pausePosition:int = 0;		
	private var testiDialog:TestDialog;
	private var testaus:Boolean = false;
	public var selectFilesBrowser:SelectFilesBrowser;

	private function init():void{
		activate();
		selectFilesBrowser =  new SelectFilesBrowser();
		this.addEventListener(Event.CLOSING, closeApplication);
		snd = new Sound();
	}
	
	private function closeApplication(event:Event):void{
		this.nativeApplication.exit();
	}
	
	public function selectImages():void{
		selectFilesBrowser.open(true);
		selectFilesBrowser.setVisible(true);
		selectFilesBrowser["openFiles"].addEventListener("click", imageSelection);					
	}
	
	private function imageSelection(event:Event):void{
		imageArray = new Array();				
		imageArray = selectFilesBrowser.getSelectedImages();
		if(!testaus){
			imageTimer.addEventListener(TimerEvent.TIMER, showImages);
		}
	}
	
	private function showImages(event:TimerEvent):void{
		viewImage();			
	}
	
	public function viewImage():void{
		if(imageCounter==imageArray.length){
			imageCounter=0;
		}
		images.load(imageArray[imageCounter].toString());
		imageCounter++;				
	} 

	public function selectSong():void{
		var songFile:File = new File(SOUND_FILES);
		songFile.cancel();
		try{
			songFile.browseForOpen("Select song",[songFilter]);
			songFile.addEventListener(Event.SELECT, selectedSong);
		}catch(error:Error){
			trace("Failed:",error.message);
		}			
	}
	
	private function selectedSong(event:Event):void{
		songName.text = event.target.name;						
		songUrl = new URLRequest(new File(event.target.nativePath).url);
		snd.load(songUrl);
		
		if(channel){
			stopSong();
		}					
	}
	
	public function playSong():void{
		if(snd != null){
			switch(play.label) {
				case "Pause":
					pausePosition = channel.position;
					channel.stop();
					play.label = "Play";
					imageTimer.stop();
					removeEventListener(Event.ENTER_FRAME, updateProgress);
					channel.removeEventListener(Event.SOUND_COMPLETE, songComplete);
					break;
				
				default:
					if(pausePosition == 0){
						channel = snd.play();
					}else{
						channel = snd.play(pausePosition);
					}
					if(!testaus){
						play.label = "Pause";
						addEventListener(Event.ENTER_FRAME, updateProgress);						
						imageTimer.start();
					}
					break;
			}
		}
	}
	
	public function stopSong():void{
		if(channel){			
			channel.stop();
			pausePosition = 0;
			if(!testaus){
				removeEventListener(Event.ENTER_FRAME, updateProgress);
				channel.removeEventListener(Event.SOUND_COMPLETE, songComplete);
				imageTimer.stop();					
				play.label = "Play";
			}
		}												
	}
	
	private function songComplete(event:Event):void{
		if(channel){		
			play.label = "Play";						
			channel.stop();						
			pausePosition = 0;
			removeEventListener(Event.ENTER_FRAME, updateProgress);
			channel.removeEventListener(Event.SOUND_COMPLETE, songComplete);
		}
	}
	
	private function updateProgress(event:Event):void{												
		var procent:int = (channel.position / snd.length)*100;
		procents.text = procent.toString()+"%";
		progressBar.mode = ProgressBarMode.MANUAL;
		progressBar.setProgress(procent ,100);
		var lenght:Number = snd.length/60000;
		var elapse:Number = channel.position/60000;
		songInfo.text = "Aika: " + elapse.toFixed(2) +
			"\nPituus: " + lenght.toFixed(2) + 
			"\nBiisi: "+ songName.text +
			"\nSoitto: "+ procent +"%";	
	}
	
	private function testaa():void{
		testiDialog = new TestDialog();
		testiDialog.init(this);
		testiDialog.open();
	}
	
	public function setTestaus(testStatus:Boolean):void{
		testaus = testStatus;
	}
	
]]>
</mx:Script>

<mx:Button x="10" y="10" label="Open pics" width="100" height="20"
		   id="openPics" click="selectImages()" />	
<mx:Image y="40" width="320" height="220" id="images" x="10" 
		  autoLoad="false" visible="true" cacheAsBitmap="false" 
		  maintainAspectRatio="true" />			
<mx:Label x="10" y="294" width="321" id="songName"/>
<mx:ProgressBar x="10" y="268" width="264" height="18" 
				id="progressBar" label=""/>
<mx:Label x="282" y="268" id="procents"/>
<mx:Button x="10" y="321" label="Open file" width="100" 
		   height="20" id="openFile" click="selectSong()"/>	
<mx:Button x="123" y="320" label="Play" width="100" height="20" 
		   id="play"  click="playSong()"/>
<mx:Button x="231" y="320" label="Stop" width="100" height="20"
		   id="stop" click="stopSong()"/>
<mx:TextArea x="10" y="348" width="321" height="73" id="songInfo"
			 editable="false"/>	
<mx:Button x="118" y="9" label="testi" id="testi" click="testaa()"/>
</mx:WindowedApplication>